local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local Role = {SHERIFF = "Sheriff", MONSTER = "Monster", INNOCENT = "Innocent"}
local CONFIG = {
    Colors = {
        [Role.SHERIFF] = Color3.new(0, 0, 1),
        [Role.MONSTER] = Color3.new(1, 0, 0),
        [Role.INNOCENT] = Color3.new(0, 1, 0)
    },
    HighlightTransparency = 0.5,
    ToolNames = {
        [Role.SHERIFF] = "Gun",
        [Role.MONSTER] = "Monster"
    },
    Folders = {
        [Role.MONSTER] = {"MonsterFolder"}
    }
}

local GameState = {Players = {}, Sheriff = nil, Monster = nil}
local PlayerList, ScreenGui

local function CreateGUI()
    if ScreenGui then ScreenGui:Destroy() end
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "RoleGUI"
    ScreenGui.ResetOnSpawn = false

    local Frame = Instance.new("Frame")
    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 200, 0, 250)
    Frame.Position = UDim2.new(0.8, 0, 0.5, -125)
    Frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    Frame.Parent = ScreenGui
    Frame.Active = true
    Frame.Draggable = true

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = Frame

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.BackgroundTransparency = 1
    Title.Text = "Player Roles"
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.TextSize = 18
    Title.Font = Enum.Font.SourceSansBold
    Title.Parent = Frame

    local ScrollingFrame = Instance.new("ScrollingFrame")
    ScrollingFrame.Name = "PlayerList"
    ScrollingFrame.Size = UDim2.new(1, -20, 1, -40)
    ScrollingFrame.Position = UDim2.new(0, 10, 0, 35)
    ScrollingFrame.BackgroundTransparency = 1
    ScrollingFrame.ScrollBarThickness = 6
    ScrollingFrame.Parent = Frame

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = ScrollingFrame

    ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    return ScrollingFrame
end

local function SafeCall(func, ...)
    local success, result = pcall(func, ...)
    if not success then warn("Error: " .. tostring(result)) end
    return success, result
end

local function GetPlayerRole(player)
    for role, toolName in pairs(CONFIG.ToolNames) do
        if player.Character and (player.Character:FindFirstChild(toolName) or player.Backpack:FindFirstChild(toolName)) then
            return role
        end
        for _, folderName in ipairs(CONFIG.Folders[role] or {}) do
            if Workspace:FindFirstChild(folderName) and Workspace[folderName]:FindFirstChild(player.Name) then
                return role
            end
        end
    end
    return Role.INNOCENT
end

local function SetHighlight(player, color)
    SafeCall(function()
        local character = player.Character
        if not character then return end
        local highlight = character:FindFirstChild("Highlight") or Instance.new("Highlight")
        highlight.Name = "Highlight"
        highlight.FillColor = color
        highlight.FillTransparency = CONFIG.HighlightTransparency
        highlight.OutlineTransparency = 1
        highlight.Parent = character
    end)
end

local function UpdateGUI()
    if not PlayerList then return end
    PlayerList:ClearAllChildren()
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim2.new(0, 5)
    UIListLayout.Parent = PlayerList
    for player, state in pairs(GameState.Players) do
        local PlayerLabel = Instance.new("TextLabel")
        PlayerLabel.Size = UDim2.new(1, 0, 0, 25)
        PlayerLabel.BackgroundColor3 = CONFIG.Colors[state.Role]
        PlayerLabel.TextColor3 = Color3.new(1, 1, 1)
        PlayerLabel.Text = player.Name .. " - " .. state.Role
        PlayerLabel.TextSize = 14
        PlayerLabel.Font = Enum.Font.SourceSans
        Instance.new("UICorner", PlayerLabel).CornerRadius = UDim.new(0, 5)
        PlayerLabel.Parent = PlayerList
    end
    PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

local function UpdatePlayerRole(player)
    SafeCall(function()
        local role = GetPlayerRole(player)
        local playerState = GameState.Players[player]
        if not playerState or playerState.Role ~= role then
            GameState.Players[player] = {Role = role}
            SetHighlight(player, CONFIG.Colors[role])
            if role == Role.SHERIFF then GameState.Sheriff = player
            elseif role == Role.MONSTER then GameState.Monster = player end
            print(player.Name .. " is now " .. role)
            UpdateGUI()
        end
    end)
end

local function RemovePlayer(player)
    SafeCall(function()
        local playerState = GameState.Players[player]
        if playerState then
            if playerState.Role == Role.SHERIFF then GameState.Sheriff = nil
            elseif playerState.Role == Role.MONSTER then GameState.Monster = nil end
            GameState.Players[player] = nil
        end
        if player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if highlight then highlight:Destroy() end
        end
        UpdateGUI()
    end)
end

local function AIAdjustRoles()
    SafeCall(function()
        if not GameState.Sheriff then
            for _, player in ipairs(Players:GetPlayers()) do
                if GetPlayerRole(player) == Role.INNOCENT then
                    GameState.Players[player] = {Role = Role.SHERIFF}
                    GameState.Sheriff = player
                    SetHighlight(player, CONFIG.Colors[Role.SHERIFF])
                    print(player.Name .. " is new Sheriff")
                    UpdateGUI()
                    break
                end
            end
        end
    end)
end

local function UpdateAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        UpdatePlayerRole(player)
    end
    AIAdjustRoles()
    UpdateGUI()
end

local function OnPlayerAdded(player)
    player.CharacterAdded:Connect(function()
        task.wait(1)
        UpdatePlayerRole(player)
        UpdateAllPlayers()
    end)
    UpdatePlayerRole(player)
    UpdateAllPlayers()
end

local function OnPlayerRemoving(player)
    RemovePlayer(player)
    UpdateAllPlayers()
end

local function EnsureHighlights()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local highlight = player.Character:FindFirstChild("Highlight")
            if not highlight then
                UpdatePlayerRole(player)
            end
        end
    end
end

local function Initialize()
    PlayerList = CreateGUI()
    GameState.Players = {}
    for _, player in ipairs(Players:GetPlayers()) do
        OnPlayerAdded(player)
    end
    UpdateAllPlayers()
end

Players.PlayerAdded:Connect(OnPlayerAdded)
Players.PlayerRemoving:Connect(OnPlayerRemoving)
RunService.Heartbeat:Connect(function()
    UpdateAllPlayers()
    EnsureHighlights()
end)
Initialize()
Players.PlayerAdded:Connect(Initialize)
Players.PlayerRemoving:Connect(Initialize)
